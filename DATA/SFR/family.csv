Security audit automatic response,FAU_ARP,"This family defines the response to be taken in case of detected events indicative of a potential  security violation."
Security audit data generation,FAU_GEN,"This family defines requirements for recording the occurrence of security relevant events that  take place under TSF control. This family identifies the level of auditing, enumerates the types of  events that shall be auditable by the TSF, and identifies the minimum set of audit-related  information that should be provided within various audit record types."
Security audit analysis,FAU_SAA,"This family defines requirements for automated means that analyze system activity and audit  data looking for possible or real security violations. This analysis may work in support of  intrusion detection, or automatic response to a potential security violation."
Security audit review,FAU_SAR,"This family defines the requirements for tools that are made available to authorized users to  assist in the review of audit data."
Security audit event selection,FAU_SEL,"This family defines requirements to select the set of events to be audited during TOE operation  from the set of all auditable events."
Security audit data storage,FAU_STG,"This family defines the requirements for the TSF to be able to create and maintain a secure audit  trail. Stored audit data refers to those data stored within an audit trail, and not to any audit data  that has been retrieved (to temporary storage) through selection."
Non-repudiation of origin,FCO_NRO,"Non-repudiation of origin ensures that the originator of information cannot successfully deny  having sent the information. This family requires that the TSF provide a method to ensure that a  subject that receives information during a data exchange is provided with evidence of the origin  of the information. This evidence can then be verified by either this subject or other subjects."
Non-repudiation of receipt,FCO_NRR,"Non-repudiation of receipt ensures that the recipient of information cannot successfully deny  receiving the information. This family requires that the TSF provide a method to ensure that a  subject that transmits information during a data exchange is provided with evidence of receipt of  the information. This evidence can then be verified by either this subject or other subjects."
Cryptographic key management,FCS_CKM,"Cryptographic keys must be managed throughout their life cycle. This family is intended to  support that lifecycle and consequently defines requirements for the following activities: cryptographic key generation;cryptographic key distribution;cryptographic key access;  — cryptographic key derivation;  timing and event of cryptographic key destruction.  This family should be included whenever there are functional requirements for the management  of cryptographic keys."
Cryptographic operation,FCS_COP, "In order for a cryptographic operation to function correctly, the operation shall be performed in  accordance with a specified algorithm and with a cryptographic key of a specified size. This family  should be included whenever there are requirements for cryptographic operations to be  performed."
Random bit generation,FCS_RBG, "Components in this family address the requirements for random bit/number generation."
Generation of random numbers,FCS_RNG,"This family defines quality requirements for the generation of random numbers which are  intended to be use for cryptographic purposes."
Access control policy,FDP_ACC,"This family identifies the access control SFPs (by name) and defines the scope of control of the  policies that form the identified access control portion of the SFRs related to the SFP. This scope  of control is characterized by three sets: the subjects under control of the policy, the objects under  control of the policy, and the operations among controlled subjects and controlled objects that  are covered by the policy. The criteria allow multiple policies to exist, each having a unique name.  This is accomplished by iterating components from this family once for each named access control  policy. The rules that define the functionality of an access control SFP will be defined by other  families such as Access control functions (FDP_ACF) and Export from the TOE (FDP_ETC). The  names of the access control SFPs identified here in Access control policy (FDP_ACC) are meant to  be used throughout the remainder of the functional components that have an operation that calls  for an assignment or selection of an “access control SFP.”"
Access control functions,FDP_ACF,"This family describes the rules for the specific functions that can implement an access control  policy named in Access control policy (FDP_ACC). Access control policy (FDP_ACC) specifies the  scope of control of the policy."
Data authentication,FDP_DAU,"Data authentication permits an entity to accept responsibility for the authenticity of information.  This family provides a method of providing a guarantee of the validity of a specific unit of data  that can be subsequently used to verify that the information content has not been forged or  fraudulently modified. In contrast to FAU: Security audit, this family is intended to be applied to  "static" data rather than data that is being transferred."
Export from the TOE,FDP_ETC,"This family defines functions for TSF-mediated exporting of user data from the TOE such that its  security attributes and protection either can be explicitly preserved or can be ignored once it has  been exported. It is concerned with limitations on export and with the association of security  attributes with the exported user data."
Information flow control policy,FDP_IFC,"This family identifies the information flow control SFPs (by name) and defines the scope of  control for each named information flow control SFP. This scope of control is characterized by  three sets: the subjects under control of the policy, the information under control of the policy,  and operations which cause controlled information to flow to and from controlled subjects  covered by the policy. The criteria allow multiple policies to exist, each having a unique name.  This is accomplished by iterating components from this family once for each named information  flow control policy. The rules that define the functionality of an information flow control SFP will  be defined by other families such as Information flow control functions (FDP_IFF) and Export  from the TOE (FDP_ETC). The names of the information flow control SFPs identified here in  Information flow control policy (FDP_IFC) are meant to be used throughout the remainder of the  functional components that have an operation that calls for an assignment or selection of an  “information flow control SFP.”"
Information flow control functions,FDP_IFF, "This family describes the rules for the specific functions that can implement the information flow  control SFPs named in Information flow control policy (FDP_IFC), which also specifies the scope  of control of the policy. It consists of two kinds of requirements: one addressing the common  information flow function issues, and a second addressing illicit information flows (i.e. covert  channels). This division arises because the issues concerning illicit information flows are, in some  sense, orthogonal to the rest of an information flow control SFP. By their nature, they circumvent  the information flow control SFP resulting in a violation of the policy. As such, they require special  functions to either limit or prevent their occurrence."
Information Retention Control,FDP_IRC,"The “Information retention control” family addresses a basic need in secure information  processing and storage applications for the secure management of data no longer needed by the  TOE to perform its operations, but that is still stored in the TOE.  The historical view of IT systems as data storage systems suggested that once entered, data would  seldom be deleted from the system, and if it was deleted, this would mainly be because of storage  exhaustion problems.  However, in a multilateral or high security environment it is important to minimize the  replication of data, as well as the time period during which data is stored in the system. It is also  possible that users can want their IT products to avoid retaining sensitive data that they consider  to be exploitable by third parties or that can threaten privacy. FDP_IRC may help users to gain  confidence that the product is secure by deleting every copy of the data when it is no longer  needed."
Import from outside of the TOE,FDP_ITC,"This family defines the mechanisms for TSF-mediated importing of user data into the TOE such  that it has appropriate security attributes and is appropriately protected. It is concerned with  limitations on importation, determination of desired security attributes, and interpretation of  security attributes associated with the user data."
Internal TOE transfer,FDP_ITT, "This family provides requirements that address protection of user data when it is transferred  between separated parts of a TOE across an internal channel. This may be contrasted with the  Inter-TSF user data confidentiality transfer protection (FDP_UCT) and Inter-TSF user data  integrity transfer protection (FDP_UIT) families, which provide protection for user data when it  is transferred between distinct TSFs across an external channel, and Export from the TOE  (FDP_ETC) and Import from outside of the TOE (FDP_ITC), which address TSF-mediated transfer  of data to or from outside the TOE."
Residual information protection,FDP_RIP, "This family addresses the need to ensure that any data contained in a resource is not available  when the resource is de-allocated from one object and reallocated to a different object. This family  requires protection for any data contained in a resource that has been logically deleted or  released but may still be present within the TSF-controlled resource which in turn may be reallocated to another object."
Rollback,FDP_ROL, "The rollback operation involves undoing the last operation or a series of operations, bounded by  some limit, such as a period of time, and return to a previous known state. Rollback provides the ability to undo the effects of an operation or series of operations to preserve the integrity of the  user data."
Stored data confidentiality,FDP_SDC, "This family provides requirements that address protection of user data confidentiality while the  data is stored within memory areas protected by the TSF. The TSF provides access to the data in  the memory through the specified interfaces only and prevents compromise of their information  bypassing these interfaces. It complements the family Stored data integrity (FDP_SDI) which  protects the user data from integrity errors while being stored in the memory."
Stored data integrity,FDP_SDI, "This family provides requirements that address protection of user data while it is stored within  containers controlled by the TSF. Integrity errors may affect user data stored in memory, or in a  storage device. This family differs from Internal TOE transfer (FDP_ITT) which protects the user  data from integrity errors while being transferred within the TOE."
Inter-TSF user data confidentiality transfer protection,FDP_UCT, "This family defines the requirements for ensuring the confidentiality of user data when it is  transferred using an external channel between the TOE and another trusted IT product."
Inter-TSF user data integrity transfer protection,FDP_UIT,"This family defines the requirements for providing integrity for user data in transit between the  TOE and another trusted IT product and recovering from detectable errors. At a minimum, this  family monitors the integrity of user data for modifications. Furthermore, this family supports  different ways of correcting detected integrity errors."
Authentication failures,FIA_AFL,"This family contains requirements for defining values for some number of unsuccessful  authentication attempts and TSF actions in cases of authentication attempt failures. Parameters  include, but are not limited to, the number of failed authentication attempts and time thresholds."
Authentication proof of identity,FIA_API, "This family defines functions provided by the TOE to prove its identity and so allow for  verification of the TOE by an external entity in the TOE’s IT environment."
User attribute definition,FIA_ATD,  "All authorized users may have a set of security attributes, other than the user's identity, that is  used to enforce the SFRs. This family defines the requirements for associating user security  attributes with users as needed to support the TSF in making security decisions."
Specification of secrets,FIA_SOS,  "This family defines requirements for mechanisms that enforce defined quality metrics on  provided secrets and generate secrets to satisfy the defined metric."
User authentication,FIA_UAU, "This family defines the types of user authentication mechanisms supported by the TSF. This  family also defines the required attributes on which the user authentication mechanisms be  based."
User identification,FIA_UID,"This family defines the conditions under which users shall be required to identify themselves  before performing any other actions that are to be mediated by the TSF and which require user  identification."
User-subject binding,FIA_USB,"An authenticated user, in order to use the TOE, typically activates a subject. The user's security  attributes are associated (totally or partially) with this subject. This family defines requirements  to create and maintain the association of the user's security attributes to a subject acting on the  user's behalf."
Limited capabilities and availability,FMT_LIM, "This family defines requirements that limit the capabilities and availability of functions in a  combined manner."
Management of functions in TSF,FMT_MOF,  "This family allows authorized users to control over the management of functions in the TSF."
Management of security attributes,FMT_MSA,  "This family allows authorized users control over the management of security attributes. This  management can include capabilities for viewing and modifying of security attributes."
Management of TSF data,FMT_MTD, "This family allows authorized users (roles) control over the management of TSF data."
Revocation,FMT_REV,  "This family addresses revocation of security attributes for a variety of entities within a TOE."
Security attribute expiration,FMT_SAE,  "This family addresses the capability to enforce time limits for the validity of security attributes."
Specification of Management Functions,FMT_SMF, "This family allows the specification of the management functions to be provided by the TOE.  Management functions provide TSFI that allow administrators to define the parameters that  control the operation of security-related aspects of the TOE, such as data protection attributes,  TOE protection attributes, audit attributes, and identification and authentication attributes.  Management functions also include those functions performed by an operator to ensure  continued operation of the TOE, such as backup and recovery. This family works in conjunction  with the other components in the FMT: Security management class: the component in this family  calls out the management functions, and other families in FMT: Security management restricts  the ability to use these management functions."
Security management roles,FMT_SMR, "This family is intended to control the assignment of different roles to users. The capabilities of  these roles with respect to security management are described in the other families in this class."
Anonymity,FPR_ANO, "This family ensures that a user can use a resource or service without disclosing the user's identity.  The requirements for anonymity provide protection of the user identity. Anonymity is not  intended to protect the subject identity."
Pseudonymity,FPR_PSE, "This family ensures that a user may use a resource or service without disclosing its user identity  but can still be accountable for that use."
Unlinkability,FPR_UNL, "This family ensures that selected entities can be linked together without external entities being  able to back trace these links."
Unobservability,FPR_UNO, "This family ensures that a user can use a resource or service without others, especially third  parties, being able to observe that the resource or service is being used."
TOE emanation,FPT_EMS, "The family FPT_EMS (TOE Emanation) of the class FPT (Protection of the TSF) describes the IT  SFRs of the TOE related to leakage of information based on emanation.  If the TOE must prevent attacks against the TOE and secret data processed by the TOE where the  attack is based on external observable phenomena of the TOE during its operation, different types  of emissions and interfaces of the TOE as well as different types of TSF data and user data can be  addressed."
Fail secure,FPT_FLS,  "The requirements of this family ensure that the TOE will always enforce its SFRs in the event of  identified categories of failures in the TSF."
TSF initialization,FPT_INI,  "This family describes the functional requirements for the initialization of the TSF by a dedicated  function of the TOE that ensures the initialization in a correct and secure operational state."
Availability of exported TSF data,FPT_ITA,"This family defines the rules for the prevention of loss of availability of TSF data moving between  the TSF and another trusted IT product."
Confidentiality of exported TSF data,FPT_ITC, "This family defines the rules for the protection from unauthorized disclosure of TSF data during  transmission between the TSF and another trusted IT product."
Integrity of exported TSF data,FPT_ITI,"This family defines the rules for the protection, from unauthorized modification, of TSF data  during transmission between the TSF and another trusted IT product."
Internal TOE TSF data transfer,FPT_ITT, "This family provides requirements that address protection of TSF data when it is transferred  between separate parts of a TOE across an internal channel."
TSF physical protection,FPT_PHP, "TSF physical protection components refer to restrictions on unauthorized physical access to the  TSF, and to the deterrence of, and resistance to, unauthorized physical modification, or  substitution of the TSF.  The requirements of components in this family ensure that the TSF is protected from physical  tampering and interference. Satisfying the requirements of these components results in the TSF  being packaged and used in such a manner that physical tampering is detectable, or resistance to  physical tampering is enforced. Without these components, the protection functions of a TSF lose  their effectiveness in environments where physical damage cannot be prevented. This family also  provides requirements regarding how the TSF shall respond to physical tampering attempts."
Trusted recovery,FPT_RCV, "The requirements of this family ensure that the TSF can determine that the TOE is started up  without protection compromise and can recover without protection compromise after  discontinuity of operations. This family is important because the start-up state of the TSF  determines the protection of subsequent states."
Replay detection,FPT_RPL,"This family addresses detection of replay for various types of entities and subsequent actions to  correct. In the case where replay may be detected, this effectively prevents it."
State synchrony protocol,FPT_SSP, "Distributed TOEs can give rise to greater complexity than monolithic TOEs through the potential  for differences in state between parts of the TOE, and through delays in communication. In most  cases synchronization of state between distributed functions involves an exchange protocol, not  a simple action. When malice exists in the distributed environment of these protocols, more  complex defensive protocols are required.  State synchrony protocol (FPT_SSP) establishes the requirement for certain critical functions of  the TSF to use this trusted protocol. State synchrony protocol (FPT_SSP) ensures that two  distributed parts of the TOE have synchronized their states after a security-relevant action."
Time stamps,FPT_STM,"This family addresses requirements for a reliable time stamp function within a TOE."
Inter-TSF TSF data consistency,FPT_TDC, "In a distributed environment, a TOE may need to exchange TSF data with another trusted IT  product. This family defines the requirements for sharing and consistent interpretation of these  attributes between the TSF of the TOE and a different trusted IT product."
Testing of external entities,FPT_TEE, "This family defines requirements for the TSF to perform tests on one or more external entities.  This component is not intended to be applied to human users.  External entities can include applications running on the TOE, hardware or software running  “underneath” the TOE (e.g. platforms, operating systems) or applications/boxes connected to the  TOE (e.g. intrusion detection systems, firewalls, login servers, time servers)."
Internal TOE TSF data replication consistency,FPT_TRC, "The requirements of this family are needed to ensure the consistency of TSF data when such data  is replicated internal to the TOE. Such data can become inconsistent if the internal channel  between parts of the TOE becomes inoperative. If the TOE is internally structured as a network  and parts of the TOE network connections are broken, this can occur when parts become disabled."
TSF self-test,FPT_TST,"The family defines the requirements for the self-testing of the TSF with respect to some expected  correct operation. Examples are interfaces to enforcement functions, and sample arithmetical  operations on critical parts of the TOE. These tests can be carried out at start-up, periodically, at  the request of the authorized user, or when other conditions are met. The actions to be taken by  the TOE as the result of self-testing are defined in other families.  The requirements of this family are also needed to detect the corruption of TSF data and TSF itself  (i.e. TSF executable code or TSF hardware component) by various failures that do not necessarily  stop the TOE's operation (which would be handled by other families). These checks need to be  performed because these failures cannot necessarily be prevented. Such failures can occur either  because of unforeseen failure modes or associated oversights in the design of hardware,  firmware, or software, or because of malicious corruption of the TSF due to inadequate logical  and/or physical protection."
Fault tolerance,FRU_FLT, "The requirements of this family ensure that the TOE will maintain correct operation even in the  event of failures."
Priority of service,FRU_PRS, "The requirements of this family allow the TSF to control the use of resources under the control of  the TSF by users and subjects such that high priority activities under the control of the TSF will  always be accomplished without undue interference or delay caused by low priority activities."
Resource allocation,FRU_RSA, "The requirements of this family allow the TSF to control the use of resources by users and subjects  such that denial of service will not occur because of unauthorized monopolization of resources."
Limitation on scope of selectable attributes,FTA_LSA, "This family defines requirements to limit the scope of session security attributes that a user can  select for a session."
Limitation on multiple concurrent sessions,FTA_MCS, "This family defines requirements to place limits on the number of concurrent sessions that belong  to the same user."
Session locking and termination,FTA_SSL, "This family defines requirements for the TSF to provide the capability for TSF-initiated and userinitiated locking, unlocking, and termination of interactive sessions."
TOE access banners,FTA_TAB,"This family defines requirements to display a configurable advisory warning message to  users regarding the appropriate use of the TOE."
TOE access history,FTA_TAH, "This family defines requirements for the TSF to display to a user, upon successful session  establishment, a history of successful and unsuccessful attempts to access the user's account."
TOE session establishment,FTA_TSE,"This family defines requirements to deny a user permission to establish a session with the TOE."
Inter-TSF trusted channel,FTP_ITC, "This family defines requirements for the creation of a trusted channel between the TSF and other  trusted IT products for the performance of security critical operations. The components of this  family may be included whenever there are requirements for the secure communication of user  or TSF data between the TOE and other trusted IT products."
Trusted channel protocol,FTP_PRO, "This family defines requirements for establishing a trusted channel and using the trusted channel  to transfer the TSF data or user data securely."
Trusted path,FTP_TRP,"This family defines the requirements to establish and maintain trusted communication to or from  users and the TSF. A trusted path can be required for any security-relevant interaction. Trusted  path exchanges can be initiated by a user during an interaction with the TSF, or the TSF can  establish communication with the user via a trusted path."
